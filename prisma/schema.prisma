// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  USER
  ADMIN

  @@map("roles")
}

model Users {
  id          String     @id @default(uuid())
  name        String     @db.VarChar(100)
  email       String     @unique @db.VarChar(100)
  password    String     @db.VarChar(64)
  role        Roles      @default(USER)
  employer_id String?
  employer    Employers? @relation(fields: [employer_id], references: [id])
  created_at  DateTime   @default(now())
  updated_at  DateTime?  @updatedAt

  @@map("users")
}

model Employers {
  id           String   @id @default(uuid())
  user         Users[]
  address      Address?
  company_name String   @unique @db.VarChar(100)
  fantasy_name String   @unique @db.VarChar(100)
  cnpj         String   @unique @db.VarChar(18)
  user_id      String   @unique
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  @@map("employers")
}

model Address {
  id             String    @id @default(uuid())
  postal_code    String    @db.VarChar(50)
  public_space   String?   @db.VarChar(50)
  address_number String?   @db.VarChar(5)
  complement     String?   @db.VarChar(20)
  city           String    @db.VarChar(100)
  state          String    @db.VarChar(100)
  country        String    @db.VarChar(100)
  employer_id    String    @unique
  employer       Employers @relation(fields: [employer_id], references: [id])
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt

  @@map("address")
}
